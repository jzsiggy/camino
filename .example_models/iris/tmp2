from sklearn.ensemble import RandomForestClassifier, VotingClassifier
from sklearn.svm import SVC
from sklearn.dummy import DummyClassifier
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA


from sklearn import preprocessing
import pandas as pd
import pickle

class Model:
    def __init__(self):
        self.model = None
        self.data = pd.read_csv('data/train.csv')
        self.X = ['SepalLengthCm', 'SepalWidthCm', 'PetalWidthCm']
        self.y = ['Species']

    def train(self):
        scaler = StandardScaler()
        pca = PCA(n_components=2)
        rf = RandomForestClassifier()
        svc = SVC()
        vote = VotingClassifier(estimators=[
            ('rf', rf), ('svc', svc)], voting='hard'
        )

        self.model = Pipeline([
            ('scaler', scaler), 
            ('pca', pca), 
            ('clf', vote)
        ])

        features = self.data[self.X].values
        labels = self.data[self.y].values

        self.model.fit(features, labels.ravel())
        return self.model    

    def predict(self, items):
        features = items.values
        return self.model.predict(features)

    def save(self):
        with open('model.pickle', 'wb') as f: 
            pickle.dump(self, f)